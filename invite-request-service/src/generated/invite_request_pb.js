// source: invite_request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.invite_request.CreateInviteRequestRequest', null, global);
goog.exportSymbol('proto.invite_request.CreateInviteRequestResponse', null, global);
goog.exportSymbol('proto.invite_request.DeleteInviteRequestRequest', null, global);
goog.exportSymbol('proto.invite_request.DeleteInviteRequestResponse', null, global);
goog.exportSymbol('proto.invite_request.Event', null, global);
goog.exportSymbol('proto.invite_request.FindAllInviteRequestsRequest', null, global);
goog.exportSymbol('proto.invite_request.FindAllInviteRequestsResponse', null, global);
goog.exportSymbol('proto.invite_request.FindInviteRequestByIdRequest', null, global);
goog.exportSymbol('proto.invite_request.FindInviteRequestByIdResponse', null, global);
goog.exportSymbol('proto.invite_request.Guest', null, global);
goog.exportSymbol('proto.invite_request.InviteRequest', null, global);
goog.exportSymbol('proto.invite_request.UpdateInviteRequestRequest', null, global);
goog.exportSymbol('proto.invite_request.UpdateInviteRequestResponse', null, global);
goog.exportSymbol('proto.invite_request.User', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.InviteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.InviteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.InviteRequest.displayName = 'proto.invite_request.InviteRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.Guest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.Guest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.Guest.displayName = 'proto.invite_request.Guest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.invite_request.Event.repeatedFields_, null);
};
goog.inherits(proto.invite_request.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.Event.displayName = 'proto.invite_request.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.User.displayName = 'proto.invite_request.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.FindAllInviteRequestsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.FindAllInviteRequestsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.FindAllInviteRequestsRequest.displayName = 'proto.invite_request.FindAllInviteRequestsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.FindAllInviteRequestsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.invite_request.FindAllInviteRequestsResponse.repeatedFields_, null);
};
goog.inherits(proto.invite_request.FindAllInviteRequestsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.FindAllInviteRequestsResponse.displayName = 'proto.invite_request.FindAllInviteRequestsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.CreateInviteRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.CreateInviteRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.CreateInviteRequestRequest.displayName = 'proto.invite_request.CreateInviteRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.CreateInviteRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.CreateInviteRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.CreateInviteRequestResponse.displayName = 'proto.invite_request.CreateInviteRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.FindInviteRequestByIdRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.FindInviteRequestByIdRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.FindInviteRequestByIdRequest.displayName = 'proto.invite_request.FindInviteRequestByIdRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.FindInviteRequestByIdResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.FindInviteRequestByIdResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.FindInviteRequestByIdResponse.displayName = 'proto.invite_request.FindInviteRequestByIdResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.UpdateInviteRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.UpdateInviteRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.UpdateInviteRequestRequest.displayName = 'proto.invite_request.UpdateInviteRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.UpdateInviteRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.UpdateInviteRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.UpdateInviteRequestResponse.displayName = 'proto.invite_request.UpdateInviteRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.DeleteInviteRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.DeleteInviteRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.DeleteInviteRequestRequest.displayName = 'proto.invite_request.DeleteInviteRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.invite_request.DeleteInviteRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.invite_request.DeleteInviteRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.invite_request.DeleteInviteRequestResponse.displayName = 'proto.invite_request.DeleteInviteRequestResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.InviteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.InviteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.InviteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.InviteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.InviteRequest}
 */
proto.invite_request.InviteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.InviteRequest;
  return proto.invite_request.InviteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.InviteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.InviteRequest}
 */
proto.invite_request.InviteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.InviteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.InviteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.InviteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.InviteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.InviteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.InviteRequest.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.InviteRequest} returns this
*/
proto.invite_request.InviteRequest.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.InviteRequest.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.InviteRequest.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.InviteRequest} returns this
*/
proto.invite_request.InviteRequest.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.InviteRequest.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.InviteRequest.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.InviteRequest} returns this
*/
proto.invite_request.InviteRequest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.InviteRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.InviteRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.InviteRequest.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.InviteRequest.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.InviteRequest} returns this
 */
proto.invite_request.InviteRequest.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.InviteRequest.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.Guest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.Guest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.Guest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.Guest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.invite_request.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.Guest}
 */
proto.invite_request.Guest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.Guest;
  return proto.invite_request.Guest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.Guest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.Guest}
 */
proto.invite_request.Guest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.Guest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.Guest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.Guest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.Guest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.Guest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Guest} returns this
 */
proto.invite_request.Guest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.Guest.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 2));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.Guest} returns this
*/
proto.invite_request.Guest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.Guest} returns this
 */
proto.invite_request.Guest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.Guest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.Guest.prototype.getUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.Guest} returns this
*/
proto.invite_request.Guest.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.Guest} returns this
 */
proto.invite_request.Guest.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.Guest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.invite_request.Event.repeatedFields_ = [6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 4, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 5, ""),
    guestsList: jspb.Message.toObjectList(msg.getGuestsList(),
    proto.invite_request.Guest.toObject, includeInstance),
    inviteRequestList: jspb.Message.toObjectList(msg.getInviteRequestList(),
    proto.invite_request.InviteRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.Event}
 */
proto.invite_request.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.Event;
  return proto.invite_request.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.Event}
 */
proto.invite_request.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    case 6:
      var value = new proto.invite_request.Guest;
      reader.readMessage(value,proto.invite_request.Guest.deserializeBinaryFromReader);
      msg.addGuests(value);
      break;
    case 7:
      var value = new proto.invite_request.InviteRequest;
      reader.readMessage(value,proto.invite_request.InviteRequest.deserializeBinaryFromReader);
      msg.addInviteRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGuestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.invite_request.Guest.serializeBinaryToWriter
    );
  }
  f = message.getInviteRequestList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.invite_request.InviteRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.Event.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.Event.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.invite_request.Event.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.invite_request.Event.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string start_time = 4;
 * @return {string}
 */
proto.invite_request.Event.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.setStartTime = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string end_time = 5;
 * @return {string}
 */
proto.invite_request.Event.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Guest guests = 6;
 * @return {!Array<!proto.invite_request.Guest>}
 */
proto.invite_request.Event.prototype.getGuestsList = function() {
  return /** @type{!Array<!proto.invite_request.Guest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.invite_request.Guest, 6));
};


/**
 * @param {!Array<!proto.invite_request.Guest>} value
 * @return {!proto.invite_request.Event} returns this
*/
proto.invite_request.Event.prototype.setGuestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.invite_request.Guest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.invite_request.Guest}
 */
proto.invite_request.Event.prototype.addGuests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.invite_request.Guest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.clearGuestsList = function() {
  return this.setGuestsList([]);
};


/**
 * repeated InviteRequest invite_request = 7;
 * @return {!Array<!proto.invite_request.InviteRequest>}
 */
proto.invite_request.Event.prototype.getInviteRequestList = function() {
  return /** @type{!Array<!proto.invite_request.InviteRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.invite_request.InviteRequest, 7));
};


/**
 * @param {!Array<!proto.invite_request.InviteRequest>} value
 * @return {!proto.invite_request.Event} returns this
*/
proto.invite_request.Event.prototype.setInviteRequestList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.invite_request.InviteRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.invite_request.InviteRequest}
 */
proto.invite_request.Event.prototype.addInviteRequest = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.invite_request.InviteRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.invite_request.Event} returns this
 */
proto.invite_request.Event.prototype.clearInviteRequestList = function() {
  return this.setInviteRequestList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.User.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    dateOfBirth: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.User}
 */
proto.invite_request.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.User;
  return proto.invite_request.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.User}
 */
proto.invite_request.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateOfBirth(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDateOfBirth();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.User} returns this
 */
proto.invite_request.User.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.User} returns this
 */
proto.invite_request.User.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.User.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.invite_request.User.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.User} returns this
 */
proto.invite_request.User.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.invite_request.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.User} returns this
 */
proto.invite_request.User.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string date_of_birth = 4;
 * @return {string}
 */
proto.invite_request.User.prototype.getDateOfBirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.User} returns this
 */
proto.invite_request.User.prototype.setDateOfBirth = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.FindAllInviteRequestsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.FindAllInviteRequestsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.FindAllInviteRequestsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindAllInviteRequestsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.FindAllInviteRequestsRequest}
 */
proto.invite_request.FindAllInviteRequestsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.FindAllInviteRequestsRequest;
  return proto.invite_request.FindAllInviteRequestsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.FindAllInviteRequestsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.FindAllInviteRequestsRequest}
 */
proto.invite_request.FindAllInviteRequestsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.FindAllInviteRequestsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.FindAllInviteRequestsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.FindAllInviteRequestsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindAllInviteRequestsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.invite_request.FindAllInviteRequestsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.FindAllInviteRequestsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.FindAllInviteRequestsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.FindAllInviteRequestsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindAllInviteRequestsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    inviteRequestsList: jspb.Message.toObjectList(msg.getInviteRequestsList(),
    proto.invite_request.InviteRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.FindAllInviteRequestsResponse}
 */
proto.invite_request.FindAllInviteRequestsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.FindAllInviteRequestsResponse;
  return proto.invite_request.FindAllInviteRequestsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.FindAllInviteRequestsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.FindAllInviteRequestsResponse}
 */
proto.invite_request.FindAllInviteRequestsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.invite_request.InviteRequest;
      reader.readMessage(value,proto.invite_request.InviteRequest.deserializeBinaryFromReader);
      msg.addInviteRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.FindAllInviteRequestsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.FindAllInviteRequestsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.FindAllInviteRequestsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindAllInviteRequestsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInviteRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.invite_request.InviteRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InviteRequest invite_requests = 1;
 * @return {!Array<!proto.invite_request.InviteRequest>}
 */
proto.invite_request.FindAllInviteRequestsResponse.prototype.getInviteRequestsList = function() {
  return /** @type{!Array<!proto.invite_request.InviteRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.invite_request.InviteRequest, 1));
};


/**
 * @param {!Array<!proto.invite_request.InviteRequest>} value
 * @return {!proto.invite_request.FindAllInviteRequestsResponse} returns this
*/
proto.invite_request.FindAllInviteRequestsResponse.prototype.setInviteRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.invite_request.InviteRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.invite_request.InviteRequest}
 */
proto.invite_request.FindAllInviteRequestsResponse.prototype.addInviteRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.invite_request.InviteRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.invite_request.FindAllInviteRequestsResponse} returns this
 */
proto.invite_request.FindAllInviteRequestsResponse.prototype.clearInviteRequestsList = function() {
  return this.setInviteRequestsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.CreateInviteRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.CreateInviteRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.CreateInviteRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.CreateInviteRequestRequest}
 */
proto.invite_request.CreateInviteRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.CreateInviteRequestRequest;
  return proto.invite_request.CreateInviteRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.CreateInviteRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.CreateInviteRequestRequest}
 */
proto.invite_request.CreateInviteRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.CreateInviteRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.CreateInviteRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.CreateInviteRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
*/
proto.invite_request.CreateInviteRequestRequest.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
*/
proto.invite_request.CreateInviteRequestRequest.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
*/
proto.invite_request.CreateInviteRequestRequest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestRequest} returns this
 */
proto.invite_request.CreateInviteRequestRequest.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestRequest.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.CreateInviteRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.CreateInviteRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.CreateInviteRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.CreateInviteRequestResponse}
 */
proto.invite_request.CreateInviteRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.CreateInviteRequestResponse;
  return proto.invite_request.CreateInviteRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.CreateInviteRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.CreateInviteRequestResponse}
 */
proto.invite_request.CreateInviteRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.CreateInviteRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.CreateInviteRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.CreateInviteRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
*/
proto.invite_request.CreateInviteRequestResponse.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
*/
proto.invite_request.CreateInviteRequestResponse.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
*/
proto.invite_request.CreateInviteRequestResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.CreateInviteRequestResponse} returns this
 */
proto.invite_request.CreateInviteRequestResponse.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.CreateInviteRequestResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.FindInviteRequestByIdRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.FindInviteRequestByIdRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.FindInviteRequestByIdRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindInviteRequestByIdRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.FindInviteRequestByIdRequest}
 */
proto.invite_request.FindInviteRequestByIdRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.FindInviteRequestByIdRequest;
  return proto.invite_request.FindInviteRequestByIdRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.FindInviteRequestByIdRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.FindInviteRequestByIdRequest}
 */
proto.invite_request.FindInviteRequestByIdRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.FindInviteRequestByIdRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.FindInviteRequestByIdRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.FindInviteRequestByIdRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindInviteRequestByIdRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.FindInviteRequestByIdRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.FindInviteRequestByIdRequest} returns this
 */
proto.invite_request.FindInviteRequestByIdRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.FindInviteRequestByIdResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.FindInviteRequestByIdResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindInviteRequestByIdResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse}
 */
proto.invite_request.FindInviteRequestByIdResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.FindInviteRequestByIdResponse;
  return proto.invite_request.FindInviteRequestByIdResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.FindInviteRequestByIdResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse}
 */
proto.invite_request.FindInviteRequestByIdResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.FindInviteRequestByIdResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.FindInviteRequestByIdResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.FindInviteRequestByIdResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
*/
proto.invite_request.FindInviteRequestByIdResponse.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
*/
proto.invite_request.FindInviteRequestByIdResponse.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
*/
proto.invite_request.FindInviteRequestByIdResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.FindInviteRequestByIdResponse} returns this
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.FindInviteRequestByIdResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.UpdateInviteRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.UpdateInviteRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.UpdateInviteRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.UpdateInviteRequestRequest}
 */
proto.invite_request.UpdateInviteRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.UpdateInviteRequestRequest;
  return proto.invite_request.UpdateInviteRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.UpdateInviteRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.UpdateInviteRequestRequest}
 */
proto.invite_request.UpdateInviteRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.UpdateInviteRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.UpdateInviteRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.UpdateInviteRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
*/
proto.invite_request.UpdateInviteRequestRequest.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
*/
proto.invite_request.UpdateInviteRequestRequest.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
*/
proto.invite_request.UpdateInviteRequestRequest.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestRequest} returns this
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestRequest.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.UpdateInviteRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.UpdateInviteRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.UpdateInviteRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.UpdateInviteRequestResponse}
 */
proto.invite_request.UpdateInviteRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.UpdateInviteRequestResponse;
  return proto.invite_request.UpdateInviteRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.UpdateInviteRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.UpdateInviteRequestResponse}
 */
proto.invite_request.UpdateInviteRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.UpdateInviteRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.UpdateInviteRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.UpdateInviteRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
*/
proto.invite_request.UpdateInviteRequestResponse.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
*/
proto.invite_request.UpdateInviteRequestResponse.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
*/
proto.invite_request.UpdateInviteRequestResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.UpdateInviteRequestResponse} returns this
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.UpdateInviteRequestResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.DeleteInviteRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.DeleteInviteRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.DeleteInviteRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.DeleteInviteRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.DeleteInviteRequestRequest}
 */
proto.invite_request.DeleteInviteRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.DeleteInviteRequestRequest;
  return proto.invite_request.DeleteInviteRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.DeleteInviteRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.DeleteInviteRequestRequest}
 */
proto.invite_request.DeleteInviteRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.DeleteInviteRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.DeleteInviteRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.DeleteInviteRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.DeleteInviteRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.DeleteInviteRequestRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.DeleteInviteRequestRequest} returns this
 */
proto.invite_request.DeleteInviteRequestRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.invite_request.DeleteInviteRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.invite_request.DeleteInviteRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.DeleteInviteRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    requester: (f = msg.getRequester()) && proto.invite_request.User.toObject(includeInstance, f),
    invitedUser: (f = msg.getInvitedUser()) && proto.invite_request.User.toObject(includeInstance, f),
    event: (f = msg.getEvent()) && proto.invite_request.Event.toObject(includeInstance, f),
    status: jspb.Message.getFieldWithDefault(msg, 5, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 6, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.invite_request.DeleteInviteRequestResponse}
 */
proto.invite_request.DeleteInviteRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.invite_request.DeleteInviteRequestResponse;
  return proto.invite_request.DeleteInviteRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.invite_request.DeleteInviteRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.invite_request.DeleteInviteRequestResponse}
 */
proto.invite_request.DeleteInviteRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setRequester(value);
      break;
    case 3:
      var value = new proto.invite_request.User;
      reader.readMessage(value,proto.invite_request.User.deserializeBinaryFromReader);
      msg.setInvitedUser(value);
      break;
    case 4:
      var value = new proto.invite_request.Event;
      reader.readMessage(value,proto.invite_request.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.invite_request.DeleteInviteRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.invite_request.DeleteInviteRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.invite_request.DeleteInviteRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRequester();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getInvitedUser();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.invite_request.User.serializeBinaryToWriter
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.invite_request.Event.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.setId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.clearId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User requester = 2;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getRequester = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 2));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
*/
proto.invite_request.DeleteInviteRequestResponse.prototype.setRequester = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.clearRequester = function() {
  return this.setRequester(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.hasRequester = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional User invited_user = 3;
 * @return {?proto.invite_request.User}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getInvitedUser = function() {
  return /** @type{?proto.invite_request.User} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.User, 3));
};


/**
 * @param {?proto.invite_request.User|undefined} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
*/
proto.invite_request.DeleteInviteRequestResponse.prototype.setInvitedUser = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.clearInvitedUser = function() {
  return this.setInvitedUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.hasInvitedUser = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Event event = 4;
 * @return {?proto.invite_request.Event}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getEvent = function() {
  return /** @type{?proto.invite_request.Event} */ (
    jspb.Message.getWrapperField(this, proto.invite_request.Event, 4));
};


/**
 * @param {?proto.invite_request.Event|undefined} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
*/
proto.invite_request.DeleteInviteRequestResponse.prototype.setEvent = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.clearEvent = function() {
  return this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string status = 5;
 * @return {string}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string created_at = 6;
 * @return {string}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string updated_at = 7;
 * @return {string}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.invite_request.DeleteInviteRequestResponse} returns this
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.clearUpdatedAt = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.invite_request.DeleteInviteRequestResponse.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.invite_request);
